{"version":3,"file":"index.esm.js","sources":["../src/utils/assertBrowserEnviroment.js","../src/utils/assertEventTarget.js","../src/stream.js","../src/receive.js","../src/dispatch.js"],"sourcesContent":["/** @format */\n\nexport const assertBrowserEnviroment = () =>\n  !(typeof process === \"object\" && String(process) === \"[object process]\");\n","/** @format */\n\nexport const assertEventTarget = (element) => element instanceof EventTarget;\n","/** @format */\n\nimport { assertBrowserEnviroment } from \"./utils/assertBrowserEnviroment.js\";\nimport { assertEventTarget } from \"./utils/assertEventTarget\";\n\nexport const stream = () => {\n  /**\n   * Run a enviroment test to assert that the enviroment is a browser, as stream will not work in a node enviroment.\n   */\n\n  if (!assertBrowserEnviroment()) {\n    throw new Error(\n      `Stream: Stream is only available in a browser enviroment.`\n    );\n  }\n\n  let eventTarget = window;\n\n  return {\n    eventTarget,\n    from(target) {\n      // Check if the passed target is a valid EventTarget instance and throw a TypeError if not,\n      // to ensure that the 'with' method receives a valid target.\n      if (!assertEventTarget(target)) {\n        throw new TypeError(\n          `StrÃ¦em: ${target} is not a valid target for a receiving or dispatching events.`\n        );\n      }\n\n      this.eventTarget = target;\n      return this;\n    },\n  };\n};\n","/** @format */\n\nimport { stream } from \"./stream.js\";\n\nexport const receive = (...eventNames) => {\n  return {\n    ...stream(),\n    eventNames,\n    then(callback, options) {\n      const eventHandler = (ev) => callback(ev);\n\n      eventNames.forEach((eventName) =>\n        this.eventTarget.addEventListener(eventName, eventHandler, options)\n      );\n\n      return () => {\n        eventNames.forEach((eventName) =>\n          this.eventTarget.removeEventListener(eventName, eventHandler, options)\n        );\n      };\n    },\n  };\n};\n","/** @format */\n\nimport { stream } from \"./stream.js\";\n\n/**\n *\n * @param  {...string} eventNames\n */\n\nexport const dispatch = (...eventNames) => {\n  return {\n    ...stream(),\n    eventNames,\n    with(payload, eventInit = {}) {\n      // Add the payload to the eventInit object.\n      eventInit.detail = payload;\n\n      eventNames.forEach((eventName) =>\n        this.eventTarget.dispatchEvent(new CustomEvent(eventName, eventInit))\n      );\n    },\n  };\n};\n"],"names":[],"mappings":"AAAA;AACA;AACO,MAAM,uBAAuB,GAAG;AACvC,EAAE,EAAE,OAAO,OAAO,KAAK,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,kBAAkB,CAAC;;ACH1E;AACA;AACO,MAAM,iBAAiB,GAAG,CAAC,OAAO,KAAK,OAAO,YAAY,WAAW;;ACF5E;AAIA;AACO,MAAM,MAAM,GAAG,MAAM;AAC5B;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,uBAAuB,EAAE,EAAE;AAClC,IAAI,MAAM,IAAI,KAAK;AACnB,MAAM,CAAC,yDAAyD,CAAC;AACjE,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,IAAI,WAAW,GAAG,MAAM,CAAC;AAC3B;AACA,EAAE,OAAO;AACT,IAAI,WAAW;AACf,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB;AACA;AACA,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;AACtC,QAAQ,MAAM,IAAI,SAAS;AAC3B,UAAU,CAAC,QAAQ,EAAE,MAAM,CAAC,6DAA6D,CAAC;AAC1F,SAAS,CAAC;AACV,OAAO;AACP;AACA,MAAM,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;AAChC,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL,GAAG,CAAC;AACJ,CAAC;;ACjCD;AAGA;AACY,MAAC,OAAO,GAAG,CAAC,GAAG,UAAU,KAAK;AAC1C,EAAE,OAAO;AACT,IAAI,GAAG,MAAM,EAAE;AACf,IAAI,UAAU;AACd,IAAI,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE;AAC5B,MAAM,MAAM,YAAY,GAAG,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;AAChD;AACA,MAAM,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS;AACnC,QAAQ,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,CAAC;AAC3E,OAAO,CAAC;AACR;AACA,MAAM,OAAO,MAAM;AACnB,QAAQ,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS;AACrC,UAAU,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,CAAC;AAChF,SAAS,CAAC;AACV,OAAO,CAAC;AACR,KAAK;AACL,GAAG,CAAC;AACJ;;ACtBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,QAAQ,GAAG,CAAC,GAAG,UAAU,KAAK;AAC3C,EAAE,OAAO;AACT,IAAI,GAAG,MAAM,EAAE;AACf,IAAI,UAAU;AACd,IAAI,IAAI,CAAC,OAAO,EAAE,SAAS,GAAG,EAAE,EAAE;AAClC;AACA,MAAM,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC;AACjC;AACA,MAAM,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS;AACnC,QAAQ,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAC7E,OAAO,CAAC;AACR,KAAK;AACL,GAAG,CAAC;AACJ;;;;"}